scalar DateTime

type Admin {
  id: Int!
  createdAt: DateTime
  email: String!
  name: String!
  password: String!
  rents: [Rent!]
}

type AdminResponse {
  id: Int!
  createdAt: DateTime
  email: String!
  name: String!
  rents: [Rent!]
}

type Rent {
  id: Int!
  createdAt: DateTime
  admin: Admin
  adminId: Int!
  tools: [Int!]!
  rentName: String!
  rentNim: String!
  rentPhone: String!
  rentLineId: String!
  organisation: String!
  fromDate: DateTime!
  expectedReturnDate: DateTime!
  totalPrice: Int
  status: String!
  fine: Int
  pickupName: String
  pickupNim: String
  returnName: String
  returnNim: String
}

type Tool {
  id: Int!
  createdAt: DateTime
  name: String!
  desc: String!
  image: String!
  activated: Boolean!
  totalStock: Int!
  priceHour: Int!
  priceDay: Int!
}

input CreateAdminInput {
  email: String!
  name: String!
  password: String!
}

input UpdateAdminInput {
  id: Int!
  email: String!
  name: String!
  password: String!
}

type Query {
  admins: [AdminResponse]!
  admin(id: Int!): AdminResponse
}

type Mutation {
  createAdmin(createAdminInput: CreateAdminInput!): AdminResponse!
  updateAdmin(updateAdminInput: UpdateAdminInput!): AdminResponse!
  removeAdmin(id: Int!): AdminResponse
}
